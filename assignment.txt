
Exercises On Inheritance:
=========================
1. Write a program to create a class by name Students, and initialize attributes like name, age, and grade while creating an object.

2. Write a Program to create a valid empty class with the name Students, with no properties.
  
3.Write a program to create a child class Teacher(name, age) that will inherit the properties from the parent class Staff(role, dept, salary) and display the staff details using show_details(self)

output:
Name:  Raj
Age:  28
Role: Teacher
Department: Science

4)Given:

Create a Bus child class that inherits from the Vehicle class. The default fare charge of any vehicle is seating capacity * 100. If Vehicle is Bus instance, we need to add an extra 10% on full fare as a maintenance charge. So total fare for bus instance will become the final amount = total fare + 10% of the total fare.

Note: The bus seating capacity is 50. so the final fare amount should be 5500. You need to override the busFare() in Bus class.

Use the following code for your parent Vehicle class. We need to access the parent class from inside a method of a child class.

class Vehicle:
    def __init__(self, name, mileage, capacity):
        self.name = name
        self.mileage = mileage
        self.capacity = capacity

    def vehicleFair(self):
        return self.capacity * 100

class Bus(Vehicle):
      def busfair():

Expected Output:
Total Bus fare is: 5500.0


5-a: New Class Which Inherits

A new class named F14 is initiated for you which inherits from the parent class Jets.

Instead of taking parameters other than self such as name and country, initiate the new class so that name is always fixed to "F14" and origin is always fixed to "USA"

Make sure the new class has its own initiation method (constructor or __init__) which takes only one parameter:self and overrides name and origin attributes as those don't change for an F14 fighter jet.

HINT 1
Note that new class inherits the parent class by having it inside its parenthesis as following:

class F14(Jets):

HINT 2

Inside the new class you can start defining it with the initiator method __init__
class F14(Jets):
    def __init__(self):

solution:
---------
class Jets:

    def __init__(self, name, country):
        self.type = "Jet"
        self.area = "Air"
        self.name = name
        self.origin = country
                
#Type your code below inside the new class

class F14(Jets):

    def __init__(self)
        

#samplecode

a=F14() 
print(a.origin)
print(a.name)


5-b: __init__ Constructor and New Attributes

A new class named F14 is initated for you which inherits from the parent class Jets.

Under this new class, define 4 attributes regarding engine, seat, tail and speed.

Make sure the new class has its own initation method (constructor or __init__) ehich takes only one parameter:self and overrides name and origin attributes to "F14" and "USA" always as those don't change for an F14 fighter jet.

Also add 3 more attributes:
engine, seat, tail which are all 2 by default.

HINT 1
Again you need to start with inheriting the parent class as following and then start constructing its own attributes.
class F14(Jets):

HINT 2
Second step will be the initiation method:

class F14(Jets):

    def __init__(self):  
      
After that you can continue defining your attributes inside the method.

HINT 3
Once attributions are defined correctly you’ll need to create an instance of F16 and assign it to the variable a as a final step.

a=F16()


solution:
=========
class Jets:
    model = None
    country = 0

    def __init__(self, name, country):
        self.type = "Jet"
        self.area = "Air"
        self.name = name
        self.origin = country
        
                
#Type your code here

class F14(Jets):
    
    def __init__(self):
        self.name="F14"
        self.origin="USA"
        self.engine=2
        self.seat=2
        self.tail=2
    
a=F14()
print(a.engine)
print(a.seat)
print(a.origin)



6)Write a Python program to create a person class. Include attributes  like name, country and date of birth. Implement a method to  determine the person’s age. 

Hint: Create a class Person with calculate_age 

Output:
------
Person :1
Name : JOHN
Country : USA
DATE of Birth: 1962-11-12
Current Age : 62


7)Write a Python program to create a class representing a bank. Include methods for managing customer accounts and transactions.
1)create_account
2)make_deposit
3)make_withdrawal
4)Check_balance


8)Write a Python program to create a class representing a shopping cart. Include methods for adding and removing items, and calculating the total price. 

Hint:
Create a class with functions add_item,remove_item, and  calculate_total.

Output:
-------
Current Item in Cart:

Papaya -100
Guava -200
Orange -150
Total Quantity:450

Update Items in cart after removing Orange:
Papaya -100
Guava -200
Total Quantity: 300
